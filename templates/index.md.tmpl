---
page_title: "Provider: Temporal"
description: |-
  The Terraform Provider for Temporal.
---

# Temporal Provider

The Terraform Provider for Temporal allows you to manage
Self-Hosted [Temporal](https://temporal.io/) resources using Infrastructure as Code. This
provider enables declarative management of Temporal namespaces, schedules, and

## Authentication Scenarios

### Development (Insecure)

```hcl
provider "temporal" {
  host     = "localhost"
  port     = "7233"
  insecure = true
}
```

### Production with OAuth2

```hcl
provider "temporal" {
  host          = "temporal.company.com"
  port          = "443"
  client_id     = var.temporal_client_id
  client_secret = var.temporal_client_secret
  token_url     = "https://auth.company.com/oauth/token"
  audience      = "temporal-api"
}
```

### mTLS Authentication

```hcl
provider "temporal" {
  host = "temporal-secure.company.com"
  port = "7233"
  
  tls {
    cert        = file("path/to/client-cert.pem")
    key         = file("path/to/client-key.pem")
    ca          = file("path/to/ca-bundle.pem")
    server_name = "temporal-frontend"
  }
}
```

## Environment Variables

The provider supports configuration via environment variables:

| Variable                 | Description                          |
| ------------------------ | ------------------------------------ |
| `TEMPORAL_HOST`          | Temporal server hostname             |
| `TEMPORAL_PORT`          | Temporal server port                 |
| `TEMPORAL_CLIENT_ID`     | OAuth2 client ID                     |
| `TEMPORAL_CLIENT_SECRET` | OAuth2 client secret                 |
| `TEMPORAL_TOKEN_URL`     | OAuth2 token endpoint                |
| `TEMPORAL_AUDIENCE`      | OAuth2 audience claim                |
| `TEMPORAL_INSECURE`      | Use insecure connection (true/false) |

## Example Usage

{{ tffile "examples/provider/provider.tf" }}

{{ .SchemaMarkdown | trimspace }}
